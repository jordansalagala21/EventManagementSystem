version: "3.8"
services:

  # db is a service
#  db:
#    image: postgres:12.6-alpine
#    environment:
#      - POSTGRES_DB=angela-dev-alpha
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=12345
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data/
  db:
    image: mysql:5.7
    restart: unless-stopped
    ports:
      - "3306:3306"
    env_file:
      - evmproject/.env
    volumes:
      - mysql_data:/var/lib/mysql

#  backed:
#    build:
#      context: .
#      dockerfile: Dockerfile # Optional
#    env_file:
#      - .env
#
#    container_name: hrms
#
#    # run command using shell-
#    command: >
#      sh -c "python manage.py runserver 0.0.0.0:8080"
#
#    ports:
#      - "8080:8080"
#
#    volumes:
#      - /app/venv  # Omits venv of local folder
#      - .:/app # Maps local dir to container directory
#
#    depends_on:
#      - db
#
#    stdin_open: true
  backend:

    build:
      context: .
      dockerfile: Dockerfile # Production Dockerfile conf

    env_file:
      - evmproject/.env

    container_name: evmapp

    command: gunicorn evmproject.wsgi --bind 0.0.0.0:8000

    volumes:
        - /app/venv  # Omits venv of local folder
        - .:/app # Maps local dir to container directory

    ports:
      - "8000:8000"

    depends_on:
      - db

#  streamlit:
#    build:
#      context: .
#      dockerfile: Dockerfile  # Path to your Dockerfile
#    ports:
#      - "8501:8501"
#    depends_on:
#      - backend  # Assuming Streamlit needs to communicate with your Django backend

#  redis:
#      image: redis:5
#      restart: unless-stopped
#      ports:
#        - "6379:6379"

  nginx:
      image: nginx:latest
      restart: always
      ports:
        - "80:80"

      volumes:
        - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro # map the nginx config
        - ./evmapp/static:/static
        - ./staticfiles:/staticfiles
        - ./media:/media

      depends_on:
        - backend

volumes:
  mysql_data:



